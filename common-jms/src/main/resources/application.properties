#
# Undertow Configuration
#
server.servlet.context-path=/
server.port=9090
server.undertow.worker-threads=2

# It's recommended to have (8 x worker-threads) for the I/O threads.
server.undertow.io-threads=16

#
# JMS Support
#
# Connection factory JNDI name. When set, takes precedence to others connection factory auto-configurations.
#spring.jms.jndi-name=

# Acknowledge mode of the container. By default, the listener is transacted with automatic acknowledgment.
spring.jms.listener.acknowledge-mode=auto

# Start the container automatically on startup.
spring.jms.listener.auto-startup=true

# Minimum number of concurrent consumers.
spring.jms.listener.concurrency=1

# Maximum number of concurrent consumers.
spring.jms.listener.max-concurrency=10

# Specify if the default destination type is topic.
spring.jms.pub-sub-domain=false

# Default destination to use on send/receive operations that do not have a destination parameter.
spring.jms.template.default-destination=${jms.default-queue.name}

# Delivery delay to use for send calls in milliseconds.
#spring.jms.template.delivery-delay=

# Delivery mode. Enable QoS when set.
spring.jms.template.delivery-mode=persistent

# Priority of a message when sending. Enable QoS when set.
spring.jms.template.priority=100

# Enable explicit QoS when sending a message.
spring.jms.template.qos-enabled=true

# Timeout to use for receive calls in milliseconds.
# When it's being invoked with a timeout of 0, the receive method blocks until a message arrives.
# To only check if a message is immediately available without blocking use any negative value.
spring.jms.template.receive-timeout=1s

# Time-to-live of a message when sending in milliseconds. Enable QoS when set.
# If there isn't any worker available until the timeout expires, the message will be discarded!
spring.jms.template.time-to-live=5m

#
# ActiveMQ Support
#
# URL of the ActiveMQ broker.
spring.activemq.broker-url=tcp://localhost:61616

# Time to wait, in milliseconds, before considering a close complete.
spring.activemq.close-timeout=15s

# Specify if the default broker URL should be in memory.
# Ignored if an explicit broker has been specified.
spring.activemq.in-memory=false

# Do not stop message delivery before re-delivering messages from a rolled back transaction.
# This implies that message order will not be preserved when this is enabled.
spring.activemq.non-blocking-redelivery=false

# Login user of the broker.
#spring.activemq.user=

# Login password of the broker.
#spring.activemq.password=

# Time to wait, in milliseconds, on Message sends for a response.
# Set it to 0 to indicate to wait forever.
spring.activemq.send-timeout=0s

# Trust all packages.
#spring.activemq.packages.trust-all=

# Comma-separated list of specific packages to trust (when not trusting all packages).
spring.activemq.packages.trusted=br.tech.desiderati

# Block when a connection is requested and the pool is full.
# Set it to false to throw a "JMSException" instead.
spring.activemq.pool.block-if-full=true

# Blocking period, in milliseconds, before throwing an exception if the pool is still full.
spring.activemq.pool.block-if-full-timeout=-1s

# Create a connection on startup. Can be used to warm-up the pool on startup.
spring.activemq.pool.create-connection-on-startup=true

# Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.
spring.activemq.pool.enabled=false

# Connection expiration timeout in milliseconds.
spring.activemq.pool.expiry-timeout=0s

# Connection idle timeout in milliseconds.
spring.activemq.pool.idle-timeout=30s

# Maximum number of pooled connections.
spring.activemq.pool.max-connections=1

# Maximum number of active sessions per connection.
spring.activemq.pool.maximum-active-session-per-connection=500

# Reset the connection when a "JMXException" occurs.
spring.activemq.pool.reconnect-on-exception=true

# Time to sleep, in milliseconds, between runs of the idle connection eviction thread.
# When negative, no idle connection eviction thread runs.
spring.activemq.pool.time-between-expiration-check=-1s

# Use only one anonymous "MessageProducer" instance.
# Set it to false to create one "MessageProducer" every time one is required.
spring.activemq.pool.use-anonymous-producers=true
